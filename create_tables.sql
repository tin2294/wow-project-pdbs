-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-11-11 23:35:23 EST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE corp_cust (
    cust_id      NUMBER(10) NOT NULL,
    company_name VARCHAR2(30) NOT NULL,
    company_no   VARCHAR2(30) NOT NULL,
    emp_id       NUMBER(10) NOT NULL,
    discid       NUMBER(10)
);

COMMENT ON COLUMN corp_cust.cust_id IS
    'Customer ID';

COMMENT ON COLUMN corp_cust.company_name IS
    'Name of the company';

COMMENT ON COLUMN corp_cust.company_no IS
    'Registration number of company';

COMMENT ON COLUMN corp_cust.emp_id IS
    'ID of the employee';

CREATE UNIQUE INDEX corp_cust__idx ON
    corp_cust (
        discid
    ASC );

ALTER TABLE corp_cust ADD CONSTRAINT corp_cust_pk PRIMARY KEY ( cust_id );

--  Customers
CREATE TABLE customer (
    cust_id         NUMBER(10) NOT NULL,
    address_houseno NUMBER(10) NOT NULL,
    address_street  VARCHAR2(30) NOT NULL,
    address_state   VARCHAR2(2) NOT NULL,
    address_city    VARCHAR2(30) NOT NULL,
    address_zipcode VARCHAR2(5) NOT NULL,
    phone           VARCHAR2(10) NOT NULL,
    cust_type       VARCHAR2(1) NOT NULL
);

ALTER TABLE customer
    ADD CONSTRAINT ch_inh_customer CHECK ( cust_type IN ( 'C', 'I' ) );

COMMENT ON TABLE customer IS
    'Customers';

COMMENT ON COLUMN customer.cust_id IS
    'Customer ID';

COMMENT ON COLUMN customer.address_houseno IS
    'House Number in Address';

COMMENT ON COLUMN customer.address_street IS
    'Street name in Address';

COMMENT ON COLUMN customer.address_state IS
    'State name in Address';

COMMENT ON COLUMN customer.address_city IS
    'City name in Address';

COMMENT ON COLUMN customer.address_zipcode IS
    'Zipcode of address';

COMMENT ON COLUMN customer.phone IS
    'PHONE NUMBER';

COMMENT ON COLUMN customer.cust_type IS
    'Type of Customer';

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cust_id );

--  Discount coupons
CREATE TABLE discount (
    discid     NUMBER(10) NOT NULL,
    percentage NUMBER(7, 2) NOT NULL,
    disc_type  VARCHAR2(1)
);

ALTER TABLE discount
    ADD CONSTRAINT ch_inh_discount CHECK ( disc_type IN ( 'DISCOUNT', 'I' ) );

COMMENT ON TABLE discount IS
    'Discount coupons';

COMMENT ON COLUMN discount.discid IS
    'Discount Coupon ID';

COMMENT ON COLUMN discount.percentage IS
    'Percentage of discount in decimals';

COMMENT ON COLUMN discount.disc_type IS
    'Type of Discount';

ALTER TABLE discount ADD CONSTRAINT discount_pk PRIMARY KEY ( discid );

CREATE TABLE indiv_cust (
    cust_id       NUMBER(10) NOT NULL,
    fname         VARCHAR2(30) NOT NULL,
    lname         VARCHAR2(30) NOT NULL,
    licenseno     VARCHAR2(15) NOT NULL,
    insurance_co  VARCHAR2(30) NOT NULL,
    insurancep_no VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN indiv_cust.cust_id IS
    'Customer ID';

COMMENT ON COLUMN indiv_cust.fname IS
    'First Name of individual customer';

COMMENT ON COLUMN indiv_cust.lname IS
    'Last Name of Individual Customer';

COMMENT ON COLUMN indiv_cust.licenseno IS
    'Licence Number of Individual customer';

COMMENT ON COLUMN indiv_cust.insurance_co IS
    'Insurance company name';

COMMENT ON COLUMN indiv_cust.insurancep_no IS
    'Insurance policy number';

ALTER TABLE indiv_cust ADD CONSTRAINT indiv_cust_pk PRIMARY KEY ( cust_id );

CREATE TABLE individual_disc (
    discid     NUMBER(10) NOT NULL,
    start_date DATE NOT NULL,
    end_date   DATE NOT NULL,
    cust_id    NUMBER(10)
);

COMMENT ON COLUMN individual_disc.discid IS
    'Discount Coupon ID';

COMMENT ON COLUMN individual_disc.start_date IS
    'Start date of validity of coupon';

COMMENT ON COLUMN individual_disc.end_date IS
    'End date of validity of coupon';

ALTER TABLE individual_disc ADD CONSTRAINT individual_disc_pk PRIMARY KEY ( discid );

--  Associate Table invoice discount
CREATE TABLE inv_disc (
    invoice_id NUMBER(10),
    discid     NUMBER(10)
);

COMMENT ON TABLE inv_disc IS
    'Associate Table invoice discount';

COMMENT ON COLUMN inv_disc.invoice_id IS
    'Invoice ID';

COMMENT ON COLUMN inv_disc.discid IS
    'Discount ID';

--  Invoices
CREATE TABLE invoice (
    invoice_id   NUMBER(10) NOT NULL,
    invoice_date DATE NOT NULL,
    service_id   NUMBER(8) NOT NULL
);

COMMENT ON TABLE invoice IS
    'Invoices';

COMMENT ON COLUMN invoice.invoice_id IS
    'Invoice ID';

COMMENT ON COLUMN invoice.invoice_date IS
    'Invoice date';

ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( invoice_id );

--  Rental offices
CREATE TABLE office (
    office_id       NUMBER(10) NOT NULL,
    address_houseno NUMBER(10) NOT NULL,
    address_street  VARCHAR2(30) NOT NULL,
    address_state   VARCHAR2(2) NOT NULL,
    address_city    VARCHAR2(30) NOT NULL,
    address_zipcode VARCHAR2(5) NOT NULL,
    phone           VARCHAR2(10) NOT NULL
);

COMMENT ON TABLE office IS
    'Rental offices';

COMMENT ON COLUMN office.office_id IS
    'Rental Office ID';

COMMENT ON COLUMN office.address_houseno IS
    'Number of house in address';

COMMENT ON COLUMN office.address_street IS
    'Street name of address';

COMMENT ON COLUMN office.address_state IS
    'State of the address abbreviated';

COMMENT ON COLUMN office.address_city IS
    'City of address';

COMMENT ON COLUMN office.address_zipcode IS
    'Zipcode of address';

COMMENT ON COLUMN office.phone IS
    'Phone of office';

ALTER TABLE office ADD CONSTRAINT office_pk PRIMARY KEY ( office_id );

CREATE TABLE payment (
    payment_id     NUMBER(10) NOT NULL,
    card_number    VARCHAR2(20) NOT NULL,
    payment_method VARCHAR2(1) NOT NULL,
    invoice_id     NUMBER(10) NOT NULL
);

COMMENT ON COLUMN payment.payment_id IS
    'Payment ID';

COMMENT ON COLUMN payment.card_number IS
    'Card number (for gift, credit or debit card)';

COMMENT ON COLUMN payment.payment_method IS
    'Payment method, which can only be G, C, D';

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( payment_id );

--  Rental services
CREATE TABLE rental_service (
    service_id     NUMBER(8) NOT NULL,
    pickup_street  VARCHAR2(30) NOT NULL,
    pickup_state   VARCHAR2(2) NOT NULL,
    pickup_country VARCHAR2(30) NOT NULL,
    pickup_zipcode VARCHAR2(5) NOT NULL,
    pickup_date    DATE NOT NULL,
    dropoff_date   DATE NOT NULL,
    start_odometer NUMBER(10) NOT NULL,
    end_odometer   NUMBER(10) NOT NULL,
    vehicle_id     NUMBER(10),
    cust_id        NUMBER(10)
);

COMMENT ON TABLE rental_service IS
    'Rental services';

COMMENT ON COLUMN rental_service.service_id IS
    'Service ID';

COMMENT ON COLUMN rental_service.pickup_street IS
    'Pick up street name';

COMMENT ON COLUMN rental_service.pickup_state IS
    'State of pickup (abbreviated)';

COMMENT ON COLUMN rental_service.pickup_country IS
    'Country of pickup';

COMMENT ON COLUMN rental_service.pickup_zipcode IS
    'Zip code of pickup';

COMMENT ON COLUMN rental_service.pickup_date IS
    'Pickup date';

COMMENT ON COLUMN rental_service.dropoff_date IS
    'Drop off date';

COMMENT ON COLUMN rental_service.start_odometer IS
    'Starting odometer read';

COMMENT ON COLUMN rental_service.end_odometer IS
    'End odometer read';

ALTER TABLE rental_service ADD CONSTRAINT rental_service_pk PRIMARY KEY ( service_id );

--  Vehicle classes
CREATE TABLE vclass (
    classid       NUMBER(10) NOT NULL,
    class_name    VARCHAR2(30) NOT NULL,
    daily_rate    NUMBER(7, 2) NOT NULL,
    daily_mileage NUMBER(10) NOT NULL,
    overage_rate  NUMBER(7, 2) NOT NULL
);

COMMENT ON TABLE vclass IS
    'Vehicle classes';

COMMENT ON COLUMN vclass.classid IS
    'Vehicle Class ID';

COMMENT ON COLUMN vclass.class_name IS
    'Vehicle class name';

COMMENT ON COLUMN vclass.daily_rate IS
    'Daily rate of vehicle class';

COMMENT ON COLUMN vclass.daily_mileage IS
    'Daily mileage of vehicle class';

COMMENT ON COLUMN vclass.overage_rate IS
    'Overage rate for vehicle class';

ALTER TABLE vclass ADD CONSTRAINT vclass_pk PRIMARY KEY ( classid );

--  Vehicles
CREATE TABLE vehicle (
    vehicle_id NUMBER(10) NOT NULL,
    vin        VARCHAR2(30) NOT NULL,
    make       VARCHAR2(30) NOT NULL,
    model      VARCHAR2(30) NOT NULL,
    year       NUMBER NOT NULL,
    lp_state   VARCHAR2(2) NOT NULL,
    lp_number  VARCHAR2(8) NOT NULL,
    classid    NUMBER(10) NOT NULL,
    office_id  NUMBER(10) NOT NULL
);

COMMENT ON TABLE vehicle IS
    'Vehicles';

COMMENT ON COLUMN vehicle.vehicle_id IS
    'ID Number of Vehicle';

COMMENT ON COLUMN vehicle.vin IS
    'Vehicle Identification Number';

COMMENT ON COLUMN vehicle.make IS
    'Make of vehicle';

COMMENT ON COLUMN vehicle.model IS
    'Model of vehicle';

COMMENT ON COLUMN vehicle.year IS
    'Year of the car';

COMMENT ON COLUMN vehicle.lp_state IS
    'License Plate State (abbreviated)';

COMMENT ON COLUMN vehicle.lp_number IS
    'License Plate number';

ALTER TABLE vehicle ADD CONSTRAINT vehicle_pk PRIMARY KEY ( vehicle_id );

ALTER TABLE corp_cust
    ADD CONSTRAINT corp_cust_customer_fk FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE corp_cust
    ADD CONSTRAINT corp_cust_discount_fk FOREIGN KEY ( discid )
        REFERENCES discount ( discid );

ALTER TABLE indiv_cust
    ADD CONSTRAINT indiv_cust_customer_fk FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE individual_disc
    ADD CONSTRAINT individual_disc_discount_fk FOREIGN KEY ( discid )
        REFERENCES discount ( discid );

ALTER TABLE individual_disc
    ADD CONSTRAINT individual_disc_indiv_cust_fk FOREIGN KEY ( cust_id )
        REFERENCES indiv_cust ( cust_id );

ALTER TABLE inv_disc
    ADD CONSTRAINT inv_disc_discount_fk FOREIGN KEY ( discid )
        REFERENCES discount ( discid );

ALTER TABLE inv_disc
    ADD CONSTRAINT inv_disc_invoice_fk FOREIGN KEY ( invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE invoice
    ADD CONSTRAINT invoice_rental_service_fk FOREIGN KEY ( service_id )
        REFERENCES rental_service ( service_id );

ALTER TABLE payment
    ADD CONSTRAINT payment_invoice_fk FOREIGN KEY ( invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE rental_service
    ADD CONSTRAINT rental_service_customer_fk FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE rental_service
    ADD CONSTRAINT rental_service_vehicle_fk FOREIGN KEY ( vehicle_id )
        REFERENCES vehicle ( vehicle_id );

ALTER TABLE vehicle
    ADD CONSTRAINT vehicle_office_fk FOREIGN KEY ( office_id )
        REFERENCES office ( office_id );

ALTER TABLE vehicle
    ADD CONSTRAINT vehicle_vclass_fk FOREIGN KEY ( classid )
        REFERENCES vclass ( classid );

CREATE OR REPLACE TRIGGER arc_fkarc_5_indiv_cust BEFORE
    INSERT OR UPDATE OF cust_id ON indiv_cust
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.cust_type
    INTO d
    FROM
        customer a
    WHERE
        a.cust_id = :new.cust_id;

    IF ( d IS NULL OR d <> 'I' ) THEN
        raise_application_error(-20223, 'FK INDIV_CUST_CUSTOMER_FK in Table INDIV_CUST violates Arc constraint on Table CUSTOMER - discriminator column CUST_TYPE doesn''t have value ''I'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_5_corp_cust BEFORE
    INSERT OR UPDATE OF cust_id ON corp_cust
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.cust_type
    INTO d
    FROM
        customer a
    WHERE
        a.cust_id = :new.cust_id;

    IF ( d IS NULL OR d <> 'C' ) THEN
        raise_application_error(-20223, 'FK CORP_CUST_CUSTOMER_FK in Table CORP_CUST violates Arc constraint on Table CUSTOMER - discriminator column CUST_TYPE doesn''t have value ''C'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             1
-- ALTER TABLE                             26
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

